export declare const $Role: {
    readonly properties: {
        readonly id: {
            readonly type: "number";
            readonly description: "The ID of the role";
            readonly isRequired: true;
        };
        readonly serverId: {
            readonly type: "string";
            readonly description: "The ID of the server";
            readonly isRequired: true;
        };
        readonly createdAt: {
            readonly type: "string";
            readonly description: "The ISO 8601 timestamp that the role was created at";
            readonly isRequired: true;
            readonly format: "date-time";
        };
        readonly updatedAt: {
            readonly type: "string";
            readonly description: "The ISO 8601 timestamp that the role was updated at, if relevant";
            readonly format: "date-time";
        };
        readonly name: {
            readonly type: "string";
            readonly description: "The role's name";
            readonly isRequired: true;
        };
        readonly isDisplayedSeparately: {
            readonly type: "boolean";
            readonly description: "If set, the role will be displayed separately in the channel member list";
        };
        readonly isSelfAssignable: {
            readonly type: "boolean";
            readonly description: "If set, this roll will be self assigned";
        };
        readonly isMentionable: {
            readonly type: "boolean";
            readonly description: "If set, this role can be mentioned";
        };
        readonly permissions: {
            readonly type: "array";
            readonly contains: {
                readonly type: "string";
            };
            readonly isRequired: true;
        };
        readonly colors: {
            readonly type: "array";
            readonly contains: {
                readonly type: "number";
                readonly description: "The integer value corresponds to the decimal RGB representation for the color";
                readonly maximum: 16777215;
            };
        };
        readonly icon: {
            readonly type: "string";
            readonly description: "The URL of the role icon";
            readonly format: "media-uri";
        };
        readonly position: {
            readonly type: "number";
            readonly description: "The position the role will be in relation to the roles in the server";
            readonly isRequired: true;
        };
        readonly isBase: {
            readonly type: "boolean";
            readonly description: "The default role users are given when joining the server. Base roles are tied directly to the server and cannot be created or deleted";
        };
    };
};
//# sourceMappingURL=$Role.d.ts.map