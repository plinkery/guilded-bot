export declare const $ForumTopicComment: {
    readonly properties: {
        readonly id: {
            readonly type: "number";
            readonly description: "The ID of the forum topic comment";
            readonly isRequired: true;
        };
        readonly content: {
            readonly type: "string";
            readonly description: "The content of the forum topic comment";
            readonly isRequired: true;
            readonly format: "markdown";
            readonly maxLength: 10000;
            readonly minLength: 1;
        };
        readonly createdAt: {
            readonly type: "string";
            readonly description: "The ISO 8601 timestamp that the forum topic comment was created at";
            readonly isRequired: true;
            readonly format: "date-time";
        };
        readonly updatedAt: {
            readonly type: "string";
            readonly description: "The ISO 8601 timestamp that the forum topic comment was updated at, if relevant";
            readonly format: "date-time";
        };
        readonly channelId: {
            readonly type: "string";
            readonly description: "The ID of the channel";
            readonly isRequired: true;
            readonly format: "uuid";
        };
        readonly forumTopicId: {
            readonly type: "number";
            readonly description: "The ID of the forum topic";
            readonly isRequired: true;
        };
        readonly createdBy: {
            readonly type: "string";
            readonly description: "The ID of the user who created this forum topic comment (Note: If this event has `createdByWebhookId` present, this field will still be populated, but can be ignored. In this case, the value of this field will always be Ann6LewA)";
            readonly isRequired: true;
        };
        readonly mentions: {
            readonly type: "Mentions";
        };
    };
};
//# sourceMappingURL=$ForumTopicComment.d.ts.map