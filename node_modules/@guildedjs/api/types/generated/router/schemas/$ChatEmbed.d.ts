export declare const $ChatEmbed: {
    readonly description: "Rich content sections optionally associated with chat messages. Properties with \"webhook-markdown\" support allow for the following: link, italic, bold, strikethrough, underline, inline code, block code, reaction, and mention.";
    readonly properties: {
        readonly title: {
            readonly type: "string";
            readonly description: "Main header of the embed";
            readonly format: "webhook-markdown";
            readonly maxLength: 256;
        };
        readonly description: {
            readonly type: "string";
            readonly description: "Subtext of the embed";
            readonly format: "webhook-markdown";
            readonly maxLength: 2048;
        };
        readonly url: {
            readonly type: "string";
            readonly description: "URL to linkify the `title` field with";
            readonly format: "uri";
            readonly maxLength: 1024;
            readonly pattern: "^(?!attachment)";
        };
        readonly color: {
            readonly type: "number";
            readonly description: "Decimal value of the color that the left border should be";
            readonly maximum: 16777215;
        };
        readonly footer: {
            readonly description: "A small section at the bottom of the embed";
            readonly properties: {
                readonly icon_url: {
                    readonly type: "string";
                    readonly description: "URL of a small image to put in the footer";
                    readonly format: "media-uri";
                    readonly maxLength: 1024;
                };
                readonly text: {
                    readonly type: "string";
                    readonly description: "Text of the footer";
                    readonly isRequired: true;
                    readonly maxLength: 2048;
                };
            };
        };
        readonly timestamp: {
            readonly type: "string";
            readonly description: "A timestamp to put in the footer";
            readonly format: "date-time";
        };
        readonly thumbnail: {
            readonly description: "An image to the right of the embed's content";
            readonly properties: {
                readonly url: {
                    readonly type: "string";
                    readonly description: "URL of the image";
                    readonly format: "media-uri";
                    readonly maxLength: 1024;
                };
            };
        };
        readonly image: {
            readonly description: "The main picture to associate with the embed";
            readonly properties: {
                readonly url: {
                    readonly type: "string";
                    readonly description: "URL of the image";
                    readonly format: "media-uri";
                    readonly maxLength: 1024;
                };
            };
        };
        readonly author: {
            readonly description: "A small section above the title of the embed";
            readonly properties: {
                readonly name: {
                    readonly type: "string";
                    readonly description: "Name of the author";
                    readonly maxLength: 256;
                };
                readonly url: {
                    readonly type: "string";
                    readonly description: "URL to linkify the author's `name` field";
                    readonly format: "uri";
                    readonly maxLength: 1024;
                    readonly pattern: "^(?!attachment)";
                };
                readonly icon_url: {
                    readonly type: "string";
                    readonly description: "URL of a small image to display to the left of the author's `name`";
                    readonly format: "media-uri";
                    readonly maxLength: 1024;
                };
            };
        };
        readonly fields: {
            readonly type: "array";
            readonly contains: {
                readonly properties: {
                    readonly name: {
                        readonly type: "string";
                        readonly description: "Header of the table-like cell";
                        readonly isRequired: true;
                        readonly format: "webhook-markdown";
                        readonly maxLength: 256;
                    };
                    readonly value: {
                        readonly type: "string";
                        readonly description: "Subtext of the table-like cell";
                        readonly isRequired: true;
                        readonly format: "webhook-markdown";
                        readonly maxLength: 1024;
                    };
                    readonly inline: {
                        readonly type: "boolean";
                        readonly description: "If the field should wrap or not";
                    };
                };
            };
        };
    };
};
//# sourceMappingURL=$ChatEmbed.d.ts.map