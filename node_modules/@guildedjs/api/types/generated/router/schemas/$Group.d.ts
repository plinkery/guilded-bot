export declare const $Group: {
    readonly properties: {
        readonly id: {
            readonly type: "string";
            readonly description: "The ID of the group";
            readonly isRequired: true;
        };
        readonly serverId: {
            readonly type: "string";
            readonly description: "The ID of the server";
            readonly isRequired: true;
        };
        readonly name: {
            readonly type: "string";
            readonly description: "The name of the group";
            readonly isRequired: true;
            readonly maxLength: 80;
            readonly minLength: 1;
        };
        readonly description: {
            readonly type: "string";
            readonly description: "The description associated with the group";
            readonly maxLength: 280;
        };
        readonly avatar: {
            readonly type: "string";
            readonly description: "The avatar image associated with the group";
            readonly format: "media-uri";
        };
        readonly isHome: {
            readonly type: "boolean";
            readonly description: "If `true`, this is the server's home group";
        };
        readonly emoteId: {
            readonly type: "number";
            readonly description: "The emote to associate with the group";
        };
        readonly isPublic: {
            readonly type: "boolean";
            readonly description: "Is this group open for anyone to join?";
        };
        readonly createdAt: {
            readonly type: "string";
            readonly description: "The ISO 8601 timestamp that the group was created at";
            readonly isRequired: true;
            readonly format: "date-time";
        };
        readonly createdBy: {
            readonly type: "string";
            readonly description: "The ID of the user who created this group";
            readonly isRequired: true;
        };
        readonly updatedAt: {
            readonly type: "string";
            readonly description: "The ISO 8601 timestamp that the group was updated at, if relevant";
            readonly format: "date-time";
        };
        readonly updatedBy: {
            readonly type: "string";
            readonly description: "The ID of the user who updated this group";
        };
        readonly archivedAt: {
            readonly type: "string";
            readonly description: "The ISO 8601 timestamp that the group was archived at, if relevant";
            readonly format: "date-time";
        };
        readonly archivedBy: {
            readonly type: "string";
            readonly description: "The ID of the user who archived this group";
        };
    };
};
//# sourceMappingURL=$Group.d.ts.map