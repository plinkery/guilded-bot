export declare const $ChatMessage: {
    readonly type: "any-of";
    readonly contains: readonly [{
        readonly properties: {
            readonly id: {
                readonly type: "string";
                readonly description: "The ID of the message";
                readonly isRequired: true;
                readonly format: "uuid";
            };
            readonly type: {
                readonly type: "Enum";
                readonly isRequired: true;
            };
            readonly serverId: {
                readonly type: "string";
                readonly description: "The ID of the server";
            };
            readonly groupId: {
                readonly type: "string";
                readonly description: "The ID of the group";
            };
            readonly channelId: {
                readonly type: "string";
                readonly description: "The ID of the channel";
                readonly isRequired: true;
                readonly format: "uuid";
            };
            readonly content: {
                readonly type: "string";
                readonly description: "The content of the message";
                readonly format: "markdown";
            };
            readonly embeds: {
                readonly type: "array";
                readonly contains: {
                    readonly type: "ChatEmbed";
                };
            };
            readonly replyMessageIds: {
                readonly type: "array";
                readonly contains: {
                    readonly type: "string";
                    readonly description: "The ID of the message";
                    readonly format: "uuid";
                };
            };
            readonly isPrivate: {
                readonly type: "boolean";
                readonly description: "If set, this message will only be seen by those mentioned or replied to";
            };
            readonly isSilent: {
                readonly type: "boolean";
                readonly description: "If set, this message did not notify mention or reply recipients";
            };
            readonly mentions: {
                readonly type: "Mentions";
            };
            readonly createdAt: {
                readonly type: "string";
                readonly description: "The ISO 8601 timestamp that the message was created at";
                readonly isRequired: true;
                readonly format: "date-time";
            };
            readonly createdBy: {
                readonly type: "string";
                readonly description: "The ID of the user who created this message (Note: If this event has `createdByWebhookId` present, this field will still be populated, but can be ignored. In this case, the value of this field will always be Ann6LewA)";
                readonly isRequired: true;
            };
            readonly createdByWebhookId: {
                readonly type: "string";
                readonly description: "The ID of the webhook who created this message, if it was created by a webhook";
            };
            readonly updatedAt: {
                readonly type: "string";
                readonly description: "The ISO 8601 timestamp that the message was updated at, if relevant";
                readonly format: "date-time";
            };
        };
    }];
};
//# sourceMappingURL=$ChatMessage.d.ts.map