import type { DocComment } from "../models/DocComment";
import { HttpRequest } from "../core/HttpRequest";
export declare class DocCommentsService {
    readonly httpRequest: HttpRequest;
    constructor(httpRequest: HttpRequest);
    /**
     * Create a comment on a doc
     * @returns any Success
     * @throws ApiError
     */
    docCommentCreate({ channelId, docId, requestBody, }: {
        channelId: string;
        docId: number;
        requestBody: {
            /**
             * The content of the doc comment
             */
            content: string;
        };
    }): Promise<{
        docComment: DocComment;
    }>;
    /**
     * Get a doc's comments
     * @returns any Success
     * @throws ApiError
     */
    docCommentReadMany({ channelId, docId, }: {
        channelId: string;
        docId: number;
    }): Promise<{
        docComments: Array<DocComment>;
    }>;
    /**
     * Get a comment on a doc
     * @returns any Success
     * @throws ApiError
     */
    docCommentRead({ channelId, docId, docCommentId, }: {
        channelId: string;
        docId: number;
        docCommentId: number;
    }): Promise<{
        docComment: DocComment;
    }>;
    /**
     * Update a doc comment
     * @returns any Success
     * @throws ApiError
     */
    docCommentUpdate({ channelId, docId, docCommentId, requestBody, }: {
        channelId: string;
        docId: number;
        docCommentId: number;
        requestBody: {
            /**
             * The content of the doc comment
             */
            content: string;
        };
    }): Promise<{
        docComment: DocComment;
    }>;
    /**
     * Delete a doc comment
     * @returns void
     * @throws ApiError
     */
    docCommentDelete({ channelId, docId, docCommentId, }: {
        channelId: string;
        docId: number;
        docCommentId: number;
    }): Promise<void>;
}
//# sourceMappingURL=DocCommentsService.d.ts.map