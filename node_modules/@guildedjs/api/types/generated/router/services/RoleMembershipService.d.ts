import { HttpRequest } from "../core/HttpRequest";
export declare class RoleMembershipService {
    readonly httpRequest: HttpRequest;
    constructor(httpRequest: HttpRequest);
    /**
     * Assign role to member
     * @returns void
     * @throws ApiError
     */
    roleMembershipCreate({ serverId, userId, roleId, }: {
        serverId: string;
        /**
         * The ID of the member that the role should be assigned to
         */
        userId: string | "@me";
        /**
         * The role ID to apply to the user
         */
        roleId: number;
    }): Promise<void>;
    /**
     * Remove role from member
     * @returns void
     * @throws ApiError
     */
    roleMembershipDelete({ serverId, userId, roleId, }: {
        serverId: string;
        /**
         * The ID of the member that the role should be removed from
         */
        userId: string | "@me";
        /**
         * The role ID to remove from the user
         */
        roleId: number;
    }): Promise<void>;
    /**
     * Get member roles
     * Get a list of the roles assigned to a member
     * @returns any Success
     * @throws ApiError
     */
    roleMembershipReadMany({ serverId, userId, }: {
        serverId: string;
        /**
         * The ID of the member to obtain roles from
         */
        userId: string | "@me";
    }): Promise<{
        /**
         * The IDs of the roles that the member currently has
         */
        roleIds: Array<number>;
    }>;
}
//# sourceMappingURL=RoleMembershipService.d.ts.map