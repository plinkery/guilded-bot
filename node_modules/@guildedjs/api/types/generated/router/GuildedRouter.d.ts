import { HttpRequest } from "./core/HttpRequest";
import { AnnouncementCommentsService } from "./services/AnnouncementCommentsService";
import { AnnouncementsService } from "./services/AnnouncementsService";
import { CalendarEventCommentsService } from "./services/CalendarEventCommentsService";
import { CalendarEventsService } from "./services/CalendarEventsService";
import { CalendarEventSeriesService } from "./services/CalendarEventSeriesService";
import { ChannelsService } from "./services/ChannelsService";
import { ChatService } from "./services/ChatService";
import { DocCommentsService } from "./services/DocCommentsService";
import { DocsService } from "./services/DocsService";
import { ForumCommentsService } from "./services/ForumCommentsService";
import { ForumsService } from "./services/ForumsService";
import { GroupMembershipService } from "./services/GroupMembershipService";
import { GroupsService } from "./services/GroupsService";
import { ListItemsService } from "./services/ListItemsService";
import { MemberBansService } from "./services/MemberBansService";
import { MembersService } from "./services/MembersService";
import { ReactionsService } from "./services/ReactionsService";
import { RoleMembershipService } from "./services/RoleMembershipService";
import { ServersService } from "./services/ServersService";
import { ServerXpService } from "./services/ServerXpService";
import { SocialLinksService } from "./services/SocialLinksService";
import { UsersService } from "./services/UsersService";
import { UserStatusService } from "./services/UserStatusService";
import { WebhookService } from "./services/WebhookService";
import { RestManager } from "../../rest/RestManager";
export declare class GuildedRouter {
    readonly announcementComments: AnnouncementCommentsService;
    readonly announcements: AnnouncementsService;
    readonly calendarEventComments: CalendarEventCommentsService;
    readonly calendarEvents: CalendarEventsService;
    readonly calendarEventSeries: CalendarEventSeriesService;
    readonly channels: ChannelsService;
    readonly chat: ChatService;
    readonly docComments: DocCommentsService;
    readonly docs: DocsService;
    readonly forumComments: ForumCommentsService;
    readonly forums: ForumsService;
    readonly groupMembership: GroupMembershipService;
    readonly groups: GroupsService;
    readonly listItems: ListItemsService;
    readonly memberBans: MemberBansService;
    readonly members: MembersService;
    readonly reactions: ReactionsService;
    readonly roleMembership: RoleMembershipService;
    readonly servers: ServersService;
    readonly serverXp: ServerXpService;
    readonly socialLinks: SocialLinksService;
    readonly users: UsersService;
    readonly userStatus: UserStatusService;
    readonly webhook: WebhookService;
    readonly request: HttpRequest;
    constructor(rest: RestManager);
}
//# sourceMappingURL=GuildedRouter.d.ts.map